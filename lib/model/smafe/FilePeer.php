<?php


/**
 * Skeleton subclass for performing query and update operations on the 'file' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Aug 24 09:56:02 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.smafe
 */
class FilePeer extends BaseFilePeer {
  
  /**
   * returns the first file matching the track_id
   *
   * @param string $key the external key 
   * @return file matching the external key
   * @author jochum
   */
  static public function getFirstFileByTrackId($track_id){
    // get id from file by uri 
    $fileCriteria = new Criteria();
    $fileCriteria->add(FilePeer::TRACK_ID, $track_id);
    $fileCriteria->addDescendingOrderByColumn(FilePeer::TRACK_ID);
    $file = FilePeer::doSelectOne($fileCriteria);
    return $file; 
  }  
  
  /**
   * returns the file matching an external_key
   *
   * @param string $key the external key 
   * @return file matching the external key
   * @author jochum
   */
  static public function getFileByExternalKey($key){
    
    // get id from file by uri 
    $fileCriteria = new Criteria();
    $fileCriteria->add(FilePeer::EXTERNAL_KEY, $key);
    $fileCriteria->addDescendingOrderByColumn(FilePeer::TRACK_ID);
    $file = FilePeer::doSelectOne($fileCriteria);

    //TODO: ? what about the cardinality of externalkey to file ? 
    // $files = FilePeer::doSelect($fileCriteria);
    // $file=NULL;
    // foreach ($files as $key => $value) {
    //   $file = $value;
    // }
    
    return $file; 
  }

  static public function getFileIdsByExternalKeys($filedescs){
    $filedesckeys = array();
    foreach ($filedescs as $key => $filedesc) {
      $filedesckeys[$key] = $filedesc->getTracknr();
    }
    $externalkeys = "'".implode("','", str_replace("'", "''", $filedesckeys) )."'";
    $con = Propel::getConnection(FilePeer::DATABASE_NAME, Propel::CONNECTION_READ);
    $fileIds = $con->query("select id from file where external_key IN ( $externalkeys )")->fetchAll(PDO::FETCH_COLUMN,'id');
    // sfContext::getInstance()->getLogger()->info("result: ".print_r($rs, true));
    return $fileIds;
  }
  
  
  static public function getFilesByExternalKeys($filedescs){
  $fileCriteria = new Criteria();
  sfContext::getInstance()->getLogger()->info('foobar: build criteria start');
  foreach ($filedescs as $key => $file) {
    $tracknr = $file->getTracknr();
    $fileCriteria->addOr($fileCriteria->getNewCriterion(FilePeer::EXTERNAL_KEY, $tracknr));
  }
  sfContext::getInstance()->getLogger()->info('foobar: build criteria done');
  
  $files = FilePeer::doSelect($fileCriteria);
  sfContext::getInstance()->getLogger()->info('foobar: query finished');
  
  return $files;
  }

} // FilePeer
