<?php


/**
 * Skeleton subclass for representing a row from the 'featurevector' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Aug 24 09:56:02 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.smafe
 */
class Featurevector extends BaseFeaturevector {
	/**
	 * Overwrite to fix BUG with stream of BLOB in db 
	 * Has to be changed if the model changes !!! -> just copy the function from BaseFeaturevector and replace the line : 
	 * fwrite($this->data, $row[$startcol + 2]);
	 * 	with: fwrite($this->data, stream_get_contents($row[$startcol + 2]))
	 *  you still need to read data as STREAM !!! -> so use stream_get_contents($fv->getData()) to get the content 
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->track_id = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->featurevectortype_id = ($row[$startcol + 1] !== null) ? (int) $row[$startcol + 1] : null;
			if ($row[$startcol + 2] !== null) {
				$this->data = fopen('php://memory', 'r+');
				fwrite($this->data, stream_get_contents($row[$startcol + 2]));
				rewind($this->data);
			} else {
				$this->data = null;
			}
			$this->file_id = ($row[$startcol + 3] !== null) ? (int) $row[$startcol + 3] : null;
			$this->inserted = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->updated = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 6; // 6 = FeaturevectorPeer::NUM_COLUMNS - FeaturevectorPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating Featurevector object", $e);
		}
	}
	
	

} // Featurevector
